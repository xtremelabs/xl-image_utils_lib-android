package com.xtremelabs.imageutils;

import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.provider.BaseColumns;

import com.xtremelabs.imageutils.db.Table;

class ImagesTable extends Table<ImageEntry> {

	private static final String TABLE_NAMES = "images";

	// must remain in same order as Columns enum
	private static final String[] COLUMNS = {
		BaseColumns._ID,
		"uri",
		"on_disk",
		"creation_time",
		"last_accessed_time",
		"size_x",
		"size_y",
		"fileSize",
		"expiry"};

	enum Columns {
		ID,
		URI,
		ON_DISK,
		CREATION_TIME,
		LAST_ACCESSED_TIME,
		SIZE_X,
		SIZE_Y,
		FILE_SIZE,
		EXPIRY;

		String getName() {
			int index = ordinal();
			return COLUMNS[index];
		}
	}

	private static final ImagesTable sInstance = new ImagesTable();

	static ImagesTable getInstance() {
		return sInstance;
	}

	@Override
	public String[] getColumns() {
		return COLUMNS;
	}

	@Override
	public String getTableName() {
		return TABLE_NAMES;
	}

	@Override
	protected String getColumnsForCreation() {
		String columns =
				COLUMNS[0] + " INTEGER PRIMARY KEY, " +
				COLUMNS[1] + " TEXT, " +
				COLUMNS[2] + " INTEGER, " +
				COLUMNS[3] + " INTEGER, " +
				COLUMNS[4] + " INTEGER, " +
				COLUMNS[5] + " INTEGER, " +
				COLUMNS[6] + " INTEGER, " +
				COLUMNS[7] + " INTEGER, " +
				COLUMNS[8] + " INTEGER, ";
		return columns;
	}

	@Override
	protected String getUniqueString() {
		return COLUMNS[1];
	}

	@Override
	protected ContentValues toContentValues(ImageEntry item) {
		ContentValues contentValues = new ContentValues();
		// id is generated by DB, not model
		contentValues.put(COLUMNS[1], item.uri);
		contentValues.put(COLUMNS[2], item.onDisk ? 1 : 0);
		contentValues.put(COLUMNS[3], item.creationTime);
		contentValues.put(COLUMNS[4], item.lastAccessedTime);
		contentValues.put(COLUMNS[5], item.sizeX);
		contentValues.put(COLUMNS[6], item.sizeY);
		contentValues.put(COLUMNS[7], item.fileSize);
		contentValues.put(COLUMNS[8], item.expiry);
		return contentValues;
	}

	public ImageEntry getEntry(SQLiteDatabase db, String uri) {
		ImageEntry entry = null;

		Cursor cursor = selectFromTable(db, Columns.URI.getName() + "=?", new String[] { uri });
		if (cursor.moveToFirst()) {
			entry = getEntryFromCursor(cursor);
		}
		return entry;
	}

	public static ImageEntry getEntryFromCursor(Cursor cursor) {
		ImageEntry entry = new ImageEntry();
		entry.id = cursor.getLong(0);
		entry.uri = cursor.getString(1);
		entry.onDisk = cursor.getInt(2) == 1;
		entry.creationTime = cursor.getLong(3);
		entry.lastAccessedTime = cursor.getLong(4);
		entry.sizeX = cursor.getInt(5);
		entry.sizeY = cursor.getInt(6);
		entry.fileSize = cursor.getLong(7);
		entry.expiry = cursor.getLong(8);
		return entry;
	}

}
